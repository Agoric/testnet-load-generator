{
  "rules": {
    "users": {
      ".read": true,
      "$userId": {
        "activeLoadgens": {
          "$loadgenId": {
            // Do not allow old loadgens
            ".validate": false
          }
        },
        "activeLoadgenClients": {
          ".write": "$userId === auth.uid",
          "$clientId": {
            ".validate": "(newData.val() === true || newData.val() == now) && root.child('loadgen').child('clients').child($clientId).exists()"
          }
        }
        // Allow other fields on user
      }
    },
    "loadgen": {
      ".read": true,
      "admin": {
        ".write": "root.child('users').child(auth.uid).child('admin').val() === true"
      },
      "clients": {
        ".indexOn": ["connected", "userId"],
        "$clientId": {
          ".write": "newData.child('userId').val() === auth.uid",
          ".validate": "newData.hasChildren(['connected', 'userId', 'walletAddress'])",
          "activeConnection": {
            ".validate": "root.child('loadgen/clientConnections').child(newData.val()).child('clientId').val() === $clientId"
          },
          "connected": {
            ".validate": "newData.isBoolean()"
          },
          "connectedAt": {
            ".validate": "newData.val() == now"
          },
          "disconnectedAt": {
            ".validate": "newData.val() == now"
          },
          "userId": {
            ".validate": "(!data.exists() || newData.val() === data.val()) && newData.val() === auth.uid"
          },
          "walletAddress": {
            ".validate": "(!data.exists() || newData.val() === data.val()) && newData.isString()"
          },
          "$other": {
            ".validate": false
          }
        }
      },
      "clientConnections": {
        ".indexOn": ["clientId", "userId"],
        "$connectionId": {
          ".write": "newData.child('userId').val() === auth.uid",
          ".validate": "newData.hasChildren(['userId', 'clientId', 'connected'])",
          "clientId": {
            ".validate": "(!data.exists() || newData.val() === data.val()) && root.child('loadgen/clients').child(newData.val()).child('userId').val() === auth.uid"
          },
          "userId": {
            ".validate": "(!data.exists() || newData.val() === data.val()) && newData.val() === auth.uid"
          },
          "connected": {
            ".validate": "newData.val() === false || (newData.val() === true && !data.parent().child('connectedAt').exists() && newData.parent().child('connectedAt').exists())"
          },
          "connectedAt": {
            ".validate": "(!data.exists() || newData.val() === data.val()) && newData.val() == now"
          },
          "lastSeenAt": {
            ".validate": "newData.val() == now && (data.parent().child('connected').val() === true || !data.parent().child('connectedAt').exists())"
          },
          "$other": {
            ".validate": false
          }
        }
      },
      "configs": {
        ".indexOn": ["clientId"],
        "$configId": {
          ".write": "!data.exists() && root.child('loadgen/clients').child(newData.child('clientId').val()).child('userId').val() === auth.uid",
          ".validate": "newData.hasChildren(['updatedAt', 'clientId'])",
          "clientId": {
            ".validate": "root.child('loadgen/clients').child(newData.val()).child('userId').val() === auth.uid"
          },
          "updatedAt": {
            ".validate": "newData.isNumber()"
          },
          "data": {
            ".validate": true
          },
          "$other": {
            ".validate": false
          }
        }
      },
      "cycles": {
        ".indexOn": ["success", "clientId"],
        "$cycleId": {
          ".write": "root.child('loadgen/clients').child(newData.child('clientId').val()).child('userId').val() === auth.uid",
          ".validate": "newData.hasChildren(['type', 'seq', 'clientId'])",
          "clientId": {
            ".validate": "(!data.exists() || newData.val() === data.val()) && root.child('loadgen/clients').child(newData.val()).child('userId').val() === auth.uid"
          },
          "startedAt": {
            ".validate": "newData.isNumber()"
          },
          "endedAt": {
            ".validate": "newData.isNumber()"
          },
          "disconnectedAt": {
            ".validate": "newData.val() == now"
          },
          "type": {
            ".validate": "(!data.exists() || newData.val() === data.val()) && newData.isString()"
          },
          "seq": {
            ".validate": "(!data.exists() || newData.val() === data.val()) && newData.isNumber()"
          },
          "success": {
            ".validate": "newData.isBoolean()"
          },
          "$other": {
            ".validate": false
          }
        }
      },
      "requestedConfigs": {
        ".write": "root.child('users').child(auth.uid).child('admin').val() === true",
        "$clientId": {
          ".write": "!newData.exists() && root.child('loadgen/clients').child($clientId).child('userId').val() === auth.uid",
          ".validate": "root.child('loadgen/clients').child($clientId).exists()"
        }
      }
    },
    "$other": {
      ".validate": false
    }
  }
}
