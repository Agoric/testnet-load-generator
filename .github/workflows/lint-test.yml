name: Lint and Test from Root

# run CI on pushes to master, and on all PRs (even the ones that target other
# branches)

on:
  push:
    branches: [master]
  pull_request:

jobs:
  dapp:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.18]
    steps:
      - name: Checkout dapp
        uses: actions/checkout@v2
        with:
          path: 'testnet-load-generator'

      # Select a branch on agoric-sdk to test against by adding text to the body of the
      # pull request. For example: #agoric-sdk-branch: zoe-release-0.7.0
      # The default is 'master'
      - name: Get the appropriate agoric-sdk branch
        id: get-sdk-branch
        uses: actions/github-script@0.9.0
        with:
          result-encoding: string
          script: |
            let branch = 'master';
            if (context.payload.pull_request) {
              const { body } = context.payload.pull_request;
              const regex = /.*\#agoric-sdk-branch:\s+(\S+)/;
              const result = regex.exec(body);
              if (result) {
                branch = result[1];
              }
            }
            console.log(branch);
            return branch;

      - name: Checkout agoric-sdk
        uses: actions/checkout@v2
        with:
          repository: Agoric/agoric-sdk
          submodules: 'true'
          path: agoric-sdk
          ref: ${{steps.get-sdk-branch.outputs.result}}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup and link agoric-sdk packages
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn link-cli $HOME/bin/agoric
          echo "$HOME/bin" >> $GITHUB_PATH
        working-directory: agoric-sdk

      - name: agoric install
        run: agoric install
        working-directory: testnet-load-generator
      - name: yarn build
        run: yarn build
        working-directory: testnet-load-generator
      - name: yarn lint
        run: yarn lint
        working-directory: testnet-load-generator
      - name: yarn test (everything)
        run: yarn test
        working-directory: testnet-load-generator
